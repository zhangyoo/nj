<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.js.nj.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.js.nj.entity.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="student_age" property="studentAge" jdbcType="VARCHAR" />
    <result column="student_address" property="studentAddress" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, student_name, student_age, student_address, create_time, teacher_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.js.nj.entity.Student" >
    insert into student (id, student_name, student_age, 
      student_address, create_time, teacher_name
      )
    values (#{id,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{studentAge,jdbcType=VARCHAR}, 
      #{studentAddress,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{teacherName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.js.nj.entity.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="studentAge != null" >
        student_age,
      </if>
      <if test="studentAddress != null" >
        student_address,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentAge != null" >
        #{studentAge,jdbcType=VARCHAR},
      </if>
      <if test="studentAddress != null" >
        #{studentAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.js.nj.entity.Student" >
    update student
    <set >
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentAge != null" >
        student_age = #{studentAge,jdbcType=VARCHAR},
      </if>
      <if test="studentAddress != null" >
        student_address = #{studentAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.js.nj.entity.Student" >
    update student
    set student_name = #{studentName,jdbcType=VARCHAR},
      student_age = #{studentAge,jdbcType=VARCHAR},
      student_address = #{studentAddress,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      teacher_name = #{teacherName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>